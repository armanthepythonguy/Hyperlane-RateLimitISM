import { IAggregationIsm, IInterchainSecurityModule, IMultisigIsm, IRoutingIsm } from '@hyperlane-xyz/core';
import type { Address } from '@hyperlane-xyz/utils';
import { ChainMap } from '../types';
export type DeployedIsm = IInterchainSecurityModule | IMultisigIsm | IAggregationIsm | IRoutingIsm;
export declare enum ModuleType {
    UNUSED = 0,
    ROUTING = 1,
    AGGREGATION = 2,
    LEGACY_MULTISIG = 3,
    MERKLE_ROOT_MULTISIG = 4,
    MESSAGE_ID_MULTISIG = 5
}
export type MultisigIsmConfig = {
    type: ModuleType.LEGACY_MULTISIG | ModuleType.MERKLE_ROOT_MULTISIG | ModuleType.MESSAGE_ID_MULTISIG;
    validators: Array<Address>;
    threshold: number;
};
export type RoutingIsmConfig = {
    type: ModuleType.ROUTING;
    owner: Address;
    domains: ChainMap<IsmConfig>;
};
export type AggregationIsmConfig = {
    type: ModuleType.AGGREGATION;
    modules: Array<IsmConfig>;
    threshold: number;
};
export type IsmConfig = Address | RoutingIsmConfig | MultisigIsmConfig | AggregationIsmConfig;
//# sourceMappingURL=types.d.ts.map