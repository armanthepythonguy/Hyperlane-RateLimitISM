import { PublicKey } from '@solana/web3.js';
import { Address } from '@hyperlane-xyz/utils';
import { BaseSealevelAdapter } from '../../app/MultiProtocolApp';
import { MultiProtocolProvider } from '../../providers/MultiProtocolProvider';
import { ChainName } from '../../types';
import { SealevelOverheadIgpData } from './serialization';
export declare class SealevelOverheadIgpAdapter extends BaseSealevelAdapter {
    readonly chainName: ChainName;
    readonly multiProvider: MultiProtocolProvider;
    readonly addresses: {
        igp: Address;
    };
    constructor(chainName: ChainName, multiProvider: MultiProtocolProvider, addresses: {
        igp: Address;
    });
    getAccountInfo(): Promise<SealevelOverheadIgpData>;
    static deriveIgpProgramPda(igpProgramId: string | PublicKey): PublicKey;
    static deriveGasPaymentPda(igpProgramId: string | PublicKey, randomWalletPubKey: PublicKey): PublicKey;
}
//# sourceMappingURL=SealevelIgpAdapter.d.ts.map