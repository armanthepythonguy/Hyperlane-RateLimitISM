"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZHash = exports.ZUWei = exports.ZNzUint = exports.ZUint = void 0;
/**
 * The types defined here are the source of truth for chain metadata.
 * ANY CHANGES HERE NEED TO BE REFLECTED IN HYPERLANE-BASE CONFIG PARSING.
 */
const zod_1 = require("zod");
/** Zod uint schema */
exports.ZUint = zod_1.z.number().int().nonnegative();
/** Zod NonZeroUint schema */
exports.ZNzUint = zod_1.z.number().int().positive();
/** Zod unsigned Wei schema which accepts either a string number or a literal number */
exports.ZUWei = zod_1.z.union([exports.ZUint.safe(), zod_1.z.string().regex(/^\d+$/)]);
/** Zod 128, 160, 256, or 512 bit hex-defined hash with a 0x prefix for hex and no prefix for base58 */
exports.ZHash = zod_1.z
    .string()
    .regex(/^(0x([0-9a-fA-F]{32}|[0-9a-fA-F]{40}|[0-9a-fA-F]{64}|[0-9a-fA-F]{128}))|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{32})$/);
//# sourceMappingURL=customZodTypes.js.map