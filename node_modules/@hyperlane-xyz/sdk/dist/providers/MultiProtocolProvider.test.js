"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const chai_1 = require("chai");
const chainMetadata_1 = require("../consts/chainMetadata");
const chains_1 = require("../consts/chains");
const MultiProtocolProvider_1 = require("../providers/MultiProtocolProvider");
describe('MultiProtocolProvider', () => {
    describe('constructs', () => {
        it('creates a multi protocol provider without type extension', async () => {
            const multiProvider = new MultiProtocolProvider_1.MultiProtocolProvider();
            const ethMetadata = multiProvider.getChainMetadata(chains_1.Chains.ethereum);
            (0, chai_1.expect)(ethMetadata.name).to.equal(chains_1.Chains.ethereum);
        });
        it('creates a multi protocol provider with type extension', async () => {
            const multiProvider = new MultiProtocolProvider_1.MultiProtocolProvider({
                [chains_1.Chains.ethereum]: { ...chainMetadata_1.ethereum, foo: '0x123', bar: 1 },
            });
            const ethMetadata = multiProvider.getChainMetadata(chains_1.Chains.ethereum);
            (0, chai_1.expect)(ethMetadata.foo).to.equal('0x123');
            (0, chai_1.expect)(ethMetadata.bar).to.equal(1);
        });
    });
});
//# sourceMappingURL=MultiProtocolProvider.test.js.map