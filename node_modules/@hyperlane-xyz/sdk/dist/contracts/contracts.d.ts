import { Ownable } from '@hyperlane-xyz/core';
import { ProtocolType } from '@hyperlane-xyz/utils';
import { ChainMetadataManager } from '../metadata/ChainMetadataManager';
import { MultiProvider } from '../providers/MultiProvider';
import { ChainMap, Connection } from '../types';
import { HyperlaneAddresses, HyperlaneAddressesMap, HyperlaneContracts, HyperlaneContractsMap, HyperlaneFactories } from './types';
export declare function serializeContractsMap<F extends HyperlaneFactories>(contractsMap: HyperlaneContractsMap<F>): HyperlaneAddressesMap<F>;
export declare function serializeContracts<F extends HyperlaneFactories>(contracts: HyperlaneContracts<F>): HyperlaneAddresses<F>;
export declare function filterAddressesMap<F extends HyperlaneFactories>(addressesMap: HyperlaneAddressesMap<any>, factories: F): HyperlaneAddressesMap<F>;
export declare function filterAddressesToProtocol(addresses: HyperlaneAddressesMap<any>, protocolType: ProtocolType, metadataManager: ChainMetadataManager<any>): HyperlaneAddressesMap<any>;
export declare function attachContracts<F extends HyperlaneFactories>(addresses: HyperlaneAddresses<F>, factories: F): HyperlaneContracts<F>;
export declare function attachContractsMap<F extends HyperlaneFactories>(addressesMap: HyperlaneAddressesMap<any>, factories: F): HyperlaneContractsMap<F>;
export declare function connectContracts<F extends HyperlaneFactories>(contracts: HyperlaneContracts<F>, connection: Connection): HyperlaneContracts<F>;
export declare function connectContractsMap<F extends HyperlaneFactories>(contractsMap: ChainMap<HyperlaneContracts<F>>, multiProvider: MultiProvider): ChainMap<HyperlaneContracts<F>>;
export declare function filterOwnableContracts(contracts: HyperlaneContracts<any>): Promise<{
    [key: string]: Ownable;
}>;
export declare function appFromAddressesMapHelper<F extends HyperlaneFactories>(addressesMap: HyperlaneAddressesMap<any>, factories: F, multiProvider: MultiProvider): {
    contractsMap: HyperlaneContractsMap<F>;
    multiProvider: MultiProvider;
};
//# sourceMappingURL=contracts.d.ts.map